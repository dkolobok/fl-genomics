from pathlib import Path


FOLD_COUNT = 2
# ETHNICITIES = ['WB', 'SA', 'AC', 'CN', 'Others']
ETHNICITIES = ['WB1', 'WB2']
PARTS = ['train', 'val', 'test']

PLINK_EXT = ['bed', 'bim', 'fam']
PLINK2_EXT = ['pgen', 'pvar', 'psam']

PHENOTYPE_NAME = 'standing_height'
PHENOTYPE_CODE = 50

SNP_COUNTS = [1000, 2000]

MODELS = ['lassonet', 'lasso', 'mlp']


rule ALL:
    input: 
        results=expand("results/{phenotype}/node_{node}/fold_{fold}/top_{snp_count}_lassonet.tsv",
            phenotype=[PHENOTYPE_NAME],
            node=range(len(ETHNICITIES)),
            fold=range(FOLD_COUNT),
            snp_count=SNP_COUNTS)


def load_phenotype:
    


rule prepare_phenotypes_and_covariates:
    input:
        split_ids="split_ids/node_{node}/fold_{fold}_{part}.tsv",
        pca="pca/node_{node}/fold_{fold}_{part}.tsv",
        dataset=UKB_DATASET
    output:
        phenotypes="phenotypes/{phenotype}/node_{node}/fold_{fold}_{part}.tsv",
        covariates="covariates/{phenotype}/node_{node}/fold_{fold}_{part}.tsv"
    script:
        "preprocess/phenotypes_covariates.py"

rule normalize_covariates:
    input:
        train="covariates/{phenotype}/node_{node}/fold_{fold}_train.tsv"
    params:
        to_normalize=['age']
    output:
        train="covariates/{phenotype}/node_{node}/fold_{fold}_train.normalized.tsv"
    script:
        "preprocess/normalize_covariates.py"

rule gwas:
    input: 
        genotype="genotypes/node_{node}/fold_{fold}_train.pgen",
        phenotype="only_phenotypes/{phenotype}/node_{node}/fold_{fold}_train.tsv",
        covariates="covariates/{phenotype}/node_{node}/fold_{fold}_train.normalized.tsv"
    output:
        results="gwas/{phenotype}/node_{node}/fold_{fold}.gwas.tsv"
    script:
        "dimred/gwas.py"

rule local_datasets:
    input:
        results=rules.gwas.output['results']
    output:
        dataset="genotypes/{phenotype}/node_{node}/fold_{fold}/top_{snp_count}_{part}.pgen"
    script:
        "dimred/topk.py"

rule local_lassonet:
    input:
        genotype    = expand("genotypes/{{phenotype}}/node_{{node}}/fold_{{fold}}/top_{{snp_count}}_{part}.pgen", part=PARTS),
        phenotype   = expand("phenotypes/{{phenotype}}/node_{{node}}/fold_{{fold}}_{part}.tsv", part=PARTS),
        covariates  = expand("covariates/{{phenotype}}/node_{{node}}/fold_{{fold}}_{part}.tsv", part=PARTS)
    params:
        pfile = lambda wildcards, input: [Path(inp).with_suffix('') for inp in input.genotype]
    output:
        results="results/{phenotype}/node_{node}/fold_{fold}/top_{snp_count}_lassonet.tsv" 
    script:
        "local/lassonet.py"
